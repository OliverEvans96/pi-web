---
import type { Navbar, Page } from "@/payload/payload-types";
import { getNavbar } from "../api";
import NavbarGroupEntry from "./NavbarGroupEntry.astro";
import NavbarPageEntry from "./NavbarPageEntry.astro";

type PageGroup = Navbar["items"][0] & { blockType: "PageGroup" };

let navbar = await getNavbar();
let adminUrl = `${process.env.PAYLOAD_URL}/admin`;

function isPage(page: Page | string | undefined): page is Page {
  return (page && typeof page !== "string") || false;
}

const extractPages = (group: PageGroup): Page[] =>
  group.pages.map((page) => page.page).filter(isPage);
---

<div class="grid place-content-center bg-yellow-300/90 text-lg font-bold h-12">
  <div class="flex flex-row font-sans text-center space-x-6">
    {
      navbar.items.map(
        (item) =>
          (item.blockType == "PageRef" && isPage(item?.page) && (
            <NavbarPageEntry title={item?.page.title} slug={item?.page.slug} />
          )) ||
          (item.blockType == "PageGroup" && (
            <NavbarGroupEntry label={item.label} pages={extractPages(item)} />
          )) ||
          (item.blockType == "HomepageRef" && (
            <NavbarPageEntry title={item?.label} slug="" />
          )) ||
          (item.blockType == "ContactPageRef" && (
            <NavbarPageEntry title={item?.label} slug="contact" />
          ))
      )
    }
    <a href={adminUrl} class="absolute right-6 hover:text-green-700 select-none">Login</a>
  </div>
</div>
